/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mainNV.raven.form;

import Connector.KetNoiSQL;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Phan Tien
 */
public class JpanelQuanLyTienPhong extends javax.swing.JPanel {

    private DefaultTableModel Model;
    private int count = -1;
   // private List<ThongTinHoaDonSV> listhdsv;

    /**
     * Creates new form JpanelQuanLyTienPhong
     */
    public JpanelQuanLyTienPhong() {
        initComponents();
        Model = (DefaultTableModel) tablehd.getModel();
        tablehd.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tablehd.getTableHeader().setOpaque(false);
        tablehd.getTableHeader().setBackground(new Color(19, 90, 118));
        tablehd.getTableHeader().setForeground(new Color(225, 225, 225));
//        ComboBoxPhong();
//        showTable();
//        AddComboboxSinhVien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CapNhatTTHDSV = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtUpThangGhi = new javax.swing.JLabel();
        txtUpSinhVien = new javax.swing.JLabel();
        txtUpTienThanhToan = new javax.swing.JLabel();
        txtUpTrangThai = new javax.swing.JComboBox<>();
        buttonThoat = new javax.swing.JButton();
        buttonLuu = new javax.swing.JButton();
        CapNhatTienPhong = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtUpTienPhong = new javax.swing.JTextField();
        buttonThoat1 = new javax.swing.JButton();
        buttonUpPhong = new javax.swing.JButton();
        cbMaPhong = new javax.swing.JComboBox<>();
        GhiTienPhong = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        buttonThoat2 = new javax.swing.JButton();
        btnGhiTienPhong = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtThang = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtNam = new com.toedter.calendar.JYearChooser();
        jLabel19 = new javax.swing.JLabel();
        cbGhiMaPhong = new javax.swing.JComboBox<>();
        main = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        buttonDonGiaDienNuoc = new javax.swing.JButton();
        buttonGhiSoDienNuoc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablehd = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTuThang = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtTuNam = new com.toedter.calendar.JYearChooser();
        jLabel5 = new javax.swing.JLabel();
        txtDenThang = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtDenNam = new com.toedter.calendar.JYearChooser();
        jLabel7 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JComboBox<>();
        cbThanhToan = new javax.swing.JCheckBox();
        btnLocKetQua = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonTTHD = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();

        CapNhatTTHDSV.setSize(new java.awt.Dimension(572, 390));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel41.setBackground(new java.awt.Color(19, 90, 118));
        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("QUẢN LÝ KHOẢN PHÍ DỊCH VỤ");
        jLabel41.setOpaque(true);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(19, 90, 118));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("CẬP NHẬT TRẠNG THÁI HÓA ĐƠN");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(19, 90, 118));
        jLabel9.setText("Tháng ghi  :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(19, 90, 118));
        jLabel10.setText("Mã sinh viên :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(19, 90, 118));
        jLabel11.setText("Số tiền thanh toán  :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(19, 90, 118));
        jLabel14.setText("Trạng thái hóa đơn :");

        txtUpThangGhi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpThangGhi.setForeground(new java.awt.Color(19, 90, 118));
        txtUpThangGhi.setText("8/2023");

        txtUpSinhVien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpSinhVien.setForeground(new java.awt.Color(19, 90, 118));
        txtUpSinhVien.setText("N21");

        txtUpTienThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpTienThanhToan.setForeground(new java.awt.Color(19, 90, 118));
        txtUpTienThanhToan.setText("34");

        txtUpTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpTrangThai.setForeground(new java.awt.Color(19, 90, 118));
        txtUpTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Đã thanh toán" }));

        buttonThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonThoat.setForeground(new java.awt.Color(19, 90, 118));
        buttonThoat.setText("Thoát");
        buttonThoat.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonThoat.setOpaque(true);
        buttonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThoatActionPerformed(evt);
            }
        });

        buttonLuu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonLuu.setForeground(new java.awt.Color(19, 90, 118));
        buttonLuu.setText("Lưu hóa đơn");
        buttonLuu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonLuu.setOpaque(true);
        buttonLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpThangGhi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpTienThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUpThangGhi, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(txtUpSinhVien, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(txtUpTienThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUpTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout CapNhatTTHDSVLayout = new javax.swing.GroupLayout(CapNhatTTHDSV.getContentPane());
        CapNhatTTHDSV.getContentPane().setLayout(CapNhatTTHDSVLayout);
        CapNhatTTHDSVLayout.setHorizontalGroup(
            CapNhatTTHDSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        CapNhatTTHDSVLayout.setVerticalGroup(
            CapNhatTTHDSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        CapNhatTienPhong.setSize(new java.awt.Dimension(503, 321));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel42.setBackground(new java.awt.Color(19, 90, 118));
        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("QUẢN LÝ KHOẢN PHÍ DỊCH VỤ");
        jLabel42.setOpaque(true);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(19, 90, 118));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("CẬP NHẬT TIỀN PHÒNG");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(19, 90, 118));
        jLabel15.setText("Mã phòng :");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(19, 90, 118));
        jLabel17.setText("Tiền phòng  :");

        txtUpTienPhong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpTienPhong.setForeground(new java.awt.Color(19, 90, 118));
        txtUpTienPhong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        buttonThoat1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonThoat1.setForeground(new java.awt.Color(19, 90, 118));
        buttonThoat1.setText("Thoát");
        buttonThoat1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonThoat1.setOpaque(true);
        buttonThoat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThoat1ActionPerformed(evt);
            }
        });

        buttonUpPhong.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonUpPhong.setForeground(new java.awt.Color(19, 90, 118));
        buttonUpPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        buttonUpPhong.setText("Cập nhật");
        buttonUpPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonUpPhong.setOpaque(true);
        buttonUpPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpPhongActionPerformed(evt);
            }
        });

        cbMaPhong.setForeground(new java.awt.Color(19, 90, 118));
        cbMaPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtUpTienPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(buttonUpPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addComponent(buttonThoat1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpTienPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUpPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonThoat1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CapNhatTienPhongLayout = new javax.swing.GroupLayout(CapNhatTienPhong.getContentPane());
        CapNhatTienPhong.getContentPane().setLayout(CapNhatTienPhongLayout);
        CapNhatTienPhongLayout.setHorizontalGroup(
            CapNhatTienPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CapNhatTienPhongLayout.setVerticalGroup(
            CapNhatTienPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CapNhatTienPhongLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        GhiTienPhong.setSize(new java.awt.Dimension(586, 373));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel43.setBackground(new java.awt.Color(19, 90, 118));
        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("QUẢN LÝ KHOẢN PHÍ DỊCH VỤ");
        jLabel43.setOpaque(true);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(19, 90, 118));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("CẬP NHẬT CHỈ SỐ ĐIỆN NƯỚC");

        buttonThoat2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonThoat2.setForeground(new java.awt.Color(19, 90, 118));
        buttonThoat2.setText("Thoát");
        buttonThoat2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonThoat2.setOpaque(true);
        buttonThoat2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThoat2ActionPerformed(evt);
            }
        });

        btnGhiTienPhong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGhiTienPhong.setForeground(new java.awt.Color(19, 90, 118));
        btnGhiTienPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnGhiTienPhong.setText("GHI TIỀN PHÒNG");
        btnGhiTienPhong.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        btnGhiTienPhong.setOpaque(true);
        btnGhiTienPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiTienPhongActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(19, 90, 118));
        jLabel16.setText("Tháng ghi :");

        txtThang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtThang.setForeground(new java.awt.Color(19, 90, 118));
        txtThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        txtThang.setOpaque(true);
        txtThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThangActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(19, 90, 118));
        jLabel18.setText("Năm ghi :");

        txtNam.setBackground(new java.awt.Color(255, 255, 255));
        txtNam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNamMouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(19, 90, 118));
        jLabel19.setText("Mã phòng :");

        cbGhiMaPhong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbGhiMaPhong.setForeground(new java.awt.Color(19, 90, 118));
        cbGhiMaPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        cbGhiMaPhong.setOpaque(true);
        cbGhiMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGhiMaPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btnGhiTienPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(buttonThoat2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel16))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(cbGhiMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtThang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbGhiMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGhiTienPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonThoat2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout GhiTienPhongLayout = new javax.swing.GroupLayout(GhiTienPhong.getContentPane());
        GhiTienPhong.getContentPane().setLayout(GhiTienPhongLayout);
        GhiTienPhongLayout.setHorizontalGroup(
            GhiTienPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        GhiTienPhongLayout.setVerticalGroup(
            GhiTienPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GhiTienPhongLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(919, 524));

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setPreferredSize(new java.awt.Dimension(980, 500));

        jLabel2.setBackground(new java.awt.Color(19, 90, 112));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 90, 118));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("QUẢN LÝ NƯỚC ĐÔ THỊ");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(237, 50, 55));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("QUẢN LÝ HÓA ĐƠN DỊCH VỤ");

        buttonDonGiaDienNuoc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonDonGiaDienNuoc.setForeground(new java.awt.Color(19, 90, 118));
        buttonDonGiaDienNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil-color.png"))); // NOI18N
        buttonDonGiaDienNuoc.setText("SỬA ĐƠN GIÁ TIỀN PHÒNG");
        buttonDonGiaDienNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonDonGiaDienNuoc.setOpaque(true);
        buttonDonGiaDienNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDonGiaDienNuocActionPerformed(evt);
            }
        });

        buttonGhiSoDienNuoc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonGhiSoDienNuoc.setForeground(new java.awt.Color(19, 90, 118));
        buttonGhiSoDienNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil-color.png"))); // NOI18N
        buttonGhiSoDienNuoc.setText("GHI TIỀN PHÒNG");
        buttonGhiSoDienNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonGhiSoDienNuoc.setOpaque(true);
        buttonGhiSoDienNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGhiSoDienNuocActionPerformed(evt);
            }
        });

        tablehd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablehd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "THÁNG GHI", "MÃ SINH VIÊN", "TIỀN THANH TOÁN", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablehd.setGridColor(new java.awt.Color(19, 90, 118));
        tablehd.setRowHeight(25);
        tablehd.setSelectionBackground(new java.awt.Color(19, 90, 118));
        tablehd.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablehd.setShowGrid(true);
        tablehd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablehdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablehd);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(19, 90, 118));
        jLabel1.setText("Bộ lọc :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(19, 90, 118));
        jLabel3.setText("Từ tháng :");

        txtTuThang.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtTuThang.setForeground(new java.awt.Color(19, 90, 118));
        txtTuThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(19, 90, 118));
        jLabel4.setText("Từ năm :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(19, 90, 118));
        jLabel5.setText("Đến tháng :");

        txtDenThang.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtDenThang.setForeground(new java.awt.Color(19, 90, 118));
        txtDenThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        txtDenThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDenThangActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(19, 90, 118));
        jLabel6.setText("Đến năm :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(19, 90, 118));
        jLabel7.setText("Mã SV :");

        txtMaSV.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtMaSV.setForeground(new java.awt.Color(19, 90, 118));
        txtMaSV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        txtMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSVActionPerformed(evt);
            }
        });

        cbThanhToan.setBackground(new java.awt.Color(255, 255, 255));
        cbThanhToan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbThanhToan.setForeground(new java.awt.Color(19, 90, 118));
        cbThanhToan.setText("Đã thanh toán");

        btnLocKetQua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLocKetQua.setForeground(new java.awt.Color(19, 90, 118));
        btnLocKetQua.setText("LỌC KẾT QUẢ");
        btnLocKetQua.setOpaque(true);
        btnLocKetQua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocKetQuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(cbThanhToan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTuThang, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtTuNam, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDenThang, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnLocKetQua, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtDenNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTuThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4)
                            .addComponent(txtTuNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDenThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(txtDenNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbThanhToan)
                .addGap(18, 18, 18)
                .addComponent(btnLocKetQua, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        buttonDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(19, 90, 118));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete_table.png"))); // NOI18N
        buttonDelete.setText("Xóa hóa đơn");
        buttonDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonDelete.setRequestFocusEnabled(false);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonTTHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonTTHD.setForeground(new java.awt.Color(19, 90, 118));
        buttonTTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil-color.png"))); // NOI18N
        buttonTTHD.setText("CẬP NHẬT TRẠNG THÁI HÓA ĐƠN");
        buttonTTHD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonTTHD.setOpaque(true);
        buttonTTHD.setPreferredSize(new java.awt.Dimension(204, 39));
        buttonTTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTTHDActionPerformed(evt);
            }
        });

        buttonReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonReset.setForeground(new java.awt.Color(19, 90, 118));
        buttonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/load.png"))); // NOI18N
        buttonReset.setText("Làm mới");
        buttonReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(58, Short.MAX_VALUE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonTTHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonGhiSoDienNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDonGiaDienNuoc)
                        .addGap(73, 73, 73))))
            .addGroup(mainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonGhiSoDienNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDonGiaDienNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonDelete)
                        .addComponent(buttonReset)
                        .addComponent(buttonTTHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonDonGiaDienNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDonGiaDienNuocActionPerformed
        // TODO add your handling code here:
        CapNhatTienPhong.setModal(true);
        CapNhatTienPhong.setLocationRelativeTo(null);
        CapNhatTienPhong.setVisible(true);
    }//GEN-LAST:event_buttonDonGiaDienNuocActionPerformed

    private void buttonGhiSoDienNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGhiSoDienNuocActionPerformed
        // TODO add your handling code here:
        GhiTienPhong.setModal(true);
        GhiTienPhong.setLocationRelativeTo(null);
        GhiTienPhong.setVisible(true);
    }//GEN-LAST:event_buttonGhiSoDienNuocActionPerformed

    private void tablehdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablehdMouseClicked
        // TODO add your handling code here:
        count = tablehd.getSelectedRow();
    }//GEN-LAST:event_tablehdMouseClicked

    private void txtDenThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDenThangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDenThangActionPerformed

    private void txtMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSVActionPerformed

    private void btnLocKetQuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocKetQuaActionPerformed
        // TODO add your handling code here:
//        if (LayNgayThangTu().compareTo(LayNgayThangDen()) > 0) {
//            JOptionPane.showMessageDialog(null, "Ngày bắt đầu lọc lớn hơn ngày kết thúc lọc. Vui lòng nhập lại!");
//        } else {
//            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//            String tungay = formatter.format(LayNgayThangTu());
//            String denngay = formatter.format(LayNgayThangDen());
//            String maphong = String.valueOf(txtMaSV.getSelectedItem());
//            byte trangthai = 0;
//            if (cbThanhToan.isSelected()) {
//                trangthai = 1;
//            }
//            if (maphong.equals("Tất cả")) {
//                LocKetQuaAll(tungay, denngay, trangthai);
//            } else {
//                LocKetQua(tungay, denngay, trangthai, maphong);
//
//            }
//        }
    }//GEN-LAST:event_btnLocKetQuaActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
//        if (count == -1) {
//            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn để xóa");
//        } else {
//            int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa hóa đơn không ?", "Thông báo", JOptionPane.YES_NO_OPTION);
//            if (choice == JOptionPane.YES_OPTION) {
//                ThongTinHoaDonSV hdsv = listhdsv.get(count);
//                deleteHoaDonTienPhong(hdsv);
//                showTable();
//            }
//        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonTTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTTHDActionPerformed
        // TODO add your handling code here:
//        if (count == -1) {
//            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn để cập nhật");
//        } else {
//            ThongTinHoaDonSV hdsv = listhdsv.get(count);
//            showHoaDonSV(hdsv);
//            CapNhatTTHDSV.setModal(true);
//            CapNhatTTHDSV.setLocationRelativeTo(null);
//            CapNhatTTHDSV.setVisible(true);
//        }
    }//GEN-LAST:event_buttonTTHDActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        // TODO add your handling code here:
    //    showTable();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThoatActionPerformed
        // TODO add your handling code here:
        this.CapNhatTTHDSV.dispose();
    }//GEN-LAST:event_buttonThoatActionPerformed

    private void buttonLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLuuActionPerformed
        // TODO add your handling code here:
   //     LuuHoaDon();
    }//GEN-LAST:event_buttonLuuActionPerformed

    private void buttonThoat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThoat1ActionPerformed
        // TODO add your handling code here:
        this.CapNhatTienPhong.dispose();
    }//GEN-LAST:event_buttonThoat1ActionPerformed

    private void buttonUpPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpPhongActionPerformed
        // TODO add your handling code here:
//        int choice = JOptionPane.showConfirmDialog(null, "Bạn có muốn cập nhật hay không ?", "Thông báo", JOptionPane.YES_NO_OPTION);
//        if (choice == JOptionPane.YES_OPTION) {
//            String tienphong = txtUpTienPhong.getText().trim();
//
//            String kiemtraso = "^[0-9.+]+$";
//
//            if (!tienphong.matches(kiemtraso)) {
//                JOptionPane.showMessageDialog(null, "Định dạng số tiền sai. Vui lòng nhập lại!");
//            } else {
//
//                CapNhatTienPhong();
//                JOptionPane.showMessageDialog(null, "Bạn đã cập nhật thành công");
//
//            }
//        }
    }//GEN-LAST:event_buttonUpPhongActionPerformed

    private void buttonThoat2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThoat2ActionPerformed
        // TODO add your handling code here:
//        this.GhiTienPhong.dispose();
    }//GEN-LAST:event_buttonThoat2ActionPerformed

    private void btnGhiTienPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiTienPhongActionPerformed
        // TODO add your handling code here:
//        HoaDonSVAll();
//        showTable();
    }//GEN-LAST:event_btnGhiTienPhongActionPerformed

    private void txtThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThangActionPerformed

    private void txtNamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNamMouseClicked
        // TODO add your handling code here
    }//GEN-LAST:event_txtNamMouseClicked

    private void cbGhiMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGhiMaPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGhiMaPhongActionPerformed

    private void cbMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaPhongActionPerformed
        // TODO add your handling code here:
//        String upmaphong = String.valueOf(cbMaPhong.getSelectedItem());
//        double uptienphong = new PhongDAO().TienPhong(upmaphong);
//        txtUpTienPhong.setText(String.valueOf(uptienphong));
    }//GEN-LAST:event_cbMaPhongActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog CapNhatTTHDSV;
    private javax.swing.JDialog CapNhatTienPhong;
    private javax.swing.JDialog GhiTienPhong;
    private javax.swing.JButton btnGhiTienPhong;
    private javax.swing.JButton btnLocKetQua;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDonGiaDienNuoc;
    private javax.swing.JButton buttonGhiSoDienNuoc;
    private javax.swing.JButton buttonLuu;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonTTHD;
    private javax.swing.JButton buttonThoat;
    private javax.swing.JButton buttonThoat1;
    private javax.swing.JButton buttonThoat2;
    private javax.swing.JButton buttonUpPhong;
    private javax.swing.JComboBox<String> cbGhiMaPhong;
    private javax.swing.JComboBox<String> cbMaPhong;
    private javax.swing.JCheckBox cbThanhToan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel main;
    private javax.swing.JTable tablehd;
    private com.toedter.calendar.JYearChooser txtDenNam;
    private javax.swing.JComboBox<String> txtDenThang;
    private javax.swing.JComboBox<String> txtMaSV;
    private com.toedter.calendar.JYearChooser txtNam;
    private javax.swing.JComboBox<String> txtThang;
    private com.toedter.calendar.JYearChooser txtTuNam;
    private javax.swing.JComboBox<String> txtTuThang;
    private javax.swing.JLabel txtUpSinhVien;
    private javax.swing.JLabel txtUpThangGhi;
    private javax.swing.JTextField txtUpTienPhong;
    private javax.swing.JLabel txtUpTienThanhToan;
    private javax.swing.JComboBox<String> txtUpTrangThai;
    // End of variables declaration//GEN-END:variables

//    private void showTable() {
//        listhdsv = new ThongTinHoaDonDAO().getAllThongTinHoaDonSV();
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//        Model.setRowCount(0);
//        for (ThongTinHoaDonSV hd : listhdsv) {
//            Date date = null;
//            try {
//                date = formatter.parse(String.valueOf(hd.getNgayThang()));
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//            String trangthai;
//            String ngayThang = formatter1.format(date);
//            if (hd.getTrangThai() == 1) {
//                trangthai = "Đã thanh toán";
//            } else {
//                trangthai = "Chưa thanh toán";
//            }
//
//            Model.addRow(new Object[]{
//                ngayThang, hd.getMaSV(), hd.getTienThanhToan(), trangthai
//            });
//
//        }
//    }
//
//    private void ShowHoaDon(ThongTinHoaDonSV hdsv) {
//        Locale localeVN = new Locale("vi", "VN");
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//        Date date = null;
//        try {
//            date = formatter.parse(String.valueOf(hdsv.getNgayThang()));
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
//        String ngayThang = formatter1.format(date);
//        txtUpThangGhi.setText(ngayThang);
//        txtUpSinhVien.setText(hdsv.getMaSV());
//        NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
//        String tongtien = currencyVN.format(hdsv.getTienThanhToan());
//        txtUpTienThanhToan.setText(tongtien);
//        if (hdsv.getTrangThai() == 0) {
//            txtUpTrangThai.setSelectedIndex(0);
//        } else {
//            txtUpTrangThai.setSelectedIndex(1);
//        }
//    }
//
//    private void LuuHoaDon() {
//        int chon = JOptionPane.showConfirmDialog(null, "Bạn có muốn lưu hóa đơn hay không ?", "Thông báo", JOptionPane.YES_NO_OPTION);
//        if (chon == JOptionPane.YES_OPTION) {
//            byte choice = 0;
//            if (txtUpTrangThai.getSelectedIndex() == 0) {
//                choice = 0;
//            } else {
//                choice = 1;
//            }
//            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//            SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//
//            Date date = null;
//            try {
//                date = formatter1.parse(String.valueOf(txtUpThangGhi.getText().trim()));
//            } catch (Exception e) {
//            }
//            date.setDate(01);
//            String ngaythang = formatter.format(date);
//
//            Connection conn = KetNoiSQL.getConnection();
//            String sql = "update hoadonsv set trangThai=? where maSV = ? and ngayThang=?";
//            try {
//                PreparedStatement ps = conn.prepareStatement(sql);
//                ps.setByte(1, choice);
//                ps.setString(2, txtUpSinhVien.getText().trim());
//                ps.setString(3, ngaythang);
//                ps.executeUpdate();
//                JOptionPane.showMessageDialog(null, "Bạn đã cập nhật hóa đơn thành công");
//                conn.close();
//            } catch (Exception e) {
//            }
//        }
//
//    }
//
//    private void ComboBoxPhong() {
//        cbMaPhong.removeAllItems();
//        cbGhiMaPhong.removeAllItems();
//        cbGhiMaPhong.addItem("Tất cả");
//        List<ThongTinPhong> listphong = new PhongDAO().getAllThongTinPhong();
//        for (ThongTinPhong phong : listphong) {
//            cbMaPhong.addItem(phong.getMaPhong());
//            cbGhiMaPhong.addItem(phong.getMaPhong());
//        }
//
//    }
//
//    private void CapNhatTienPhong() {
//        String maphong = String.valueOf(cbMaPhong.getSelectedItem());
//        double tienphong = Double.parseDouble(txtUpTienPhong.getText().trim());
//
//        Connection conn = KetNoiSQL.getConnection();
//        String sql = "update Phong set tienPhong='" + tienphong + "' where maPhong='" + maphong + "'";
//        try {
//            PreparedStatement ps = conn.prepareStatement(sql);
//            ps.executeUpdate();
//            conn.close();
//        } catch (Exception e) {
//        }
//    }
//
//    private void HoaDonSVTheoMaPhong(String maphong) {
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        String ngay = "1";
//        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
//        String nam = String.valueOf(txtNam.getYear());
//        String chuoingaythang = nam + "-" + thang + "-" + ngay;
//        Date date1 = null;
//        try {
//            date1 = formatter.parse(chuoingaythang);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        String ngaythang = formatter.format(date1);
//
//        List<ThongTinSinhVien> listsv = new HopDongKTXDAO().getAllThongTinSVConHDTheoMaPhong(ngaythang, maphong);
//
//        for (ThongTinSinhVien sv : listsv) {
//            double tienphong = new HopDongKTXDAO().getTienPhongTheoMaSV(sv.getMaSV());
//
//            Connection conn = KetNoiSQL.getConnection();
//            String sql = "insert into hoadonsv(ngayThang,maSV,tienThanhToan,trangThai) values(?,?,?,?)";
//            try {
//                PreparedStatement ps = conn.prepareStatement(sql);
//                ps.setString(1, ngaythang);
//                ps.setString(2, sv.getMaSV());
//                ps.setDouble(3, tienphong);
//                ps.setByte(4, Byte.valueOf("0"));
//                ps.executeUpdate();
//                conn.close();
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//        }
//    }
//
//    private void HoaDonSVAll() {
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        String ngay = "1";
//        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
//        String nam = String.valueOf(txtNam.getYear());
//        String chuoingaythang = nam + "-" + thang + "-" + ngay;
//        Date date1 = null;
//        try {
//            date1 = formatter.parse(chuoingaythang);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        String ngaythang = formatter.format(date1);
//
//        List<ThongTinSinhVien> listsv = new HopDongKTXDAO().getAllThongTinSVConHDTheoMaPhong(ngaythang);
//
//        for (ThongTinSinhVien sv : listsv) {
//            boolean kiemtra = new ThongTinHoaDonDAO().KiemTraHoaDonSV(sv.getMaSV(), ngaythang);
//            if (kiemtra == false) {
//
//                double tienphong = new HopDongKTXDAO().getTienPhongTheoMaSV(sv.getMaSV());
//
//                Connection conn = KetNoiSQL.getConnection();
//                String sql = "insert into hoadonsv(ngayThang,maSV,tienThanhToan,trangThai) values(?,?,?,?)";
//                try {
//                    PreparedStatement ps = conn.prepareStatement(sql);
//                    ps.setString(1, ngaythang);
//                    ps.setString(2, sv.getMaSV());
//                    ps.setDouble(3, tienphong);
//                    ps.setByte(4, Byte.valueOf("0"));
//                    ps.executeUpdate();
//                    conn.close();
//                } catch (Exception e) {
//                    e.printStackTrace();
//                }
//            }
//        }
//        JOptionPane.showMessageDialog(null, "Bạn ghi tiền phòng thành công!");
//    }
//
//    void deleteHoaDonTienPhong(ThongTinHoaDonSV hdsv) {
//        Connection conn = KetNoiSQL.getConnection();
//        String sql = "delete from hoadonsv where maSV = ? and ngayThang = ?";
//
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//
//        Date date = null;
//        try {
//            date = formatter.parse(String.valueOf(hdsv.getNgayThang()));
//        } catch (Exception e) {
//        }
//        String ngaythang = formatter.format(date);
//        try {
//            PreparedStatement ps = conn.prepareStatement(sql);
//            ps.setString(1, hdsv.getMaSV());
//            ps.setString(2, ngaythang);
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(null, "Xóa hóa đơn thành công");
//            ps.close();
//            conn.close();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//    }
//
//    public void showHoaDonSV(ThongTinHoaDonSV hdsv) {
//        Locale localeVN = new Locale("vi", "VN");
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//        Date date = null;
//        try {
//            date = formatter.parse(String.valueOf(hdsv.getNgayThang()));
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
//        String ngayThang = formatter1.format(date);
//        txtUpThangGhi.setText(ngayThang);
//        txtUpSinhVien.setText(hdsv.getMaSV());
//        txtUpTienThanhToan.setText(String.valueOf(hdsv.getTienThanhToan()));
//        if (hdsv.getTrangThai() == 0) {
//            txtUpTrangThai.setSelectedIndex(0);
//        } else {
//            txtUpTrangThai.setSelectedIndex(1);
//        }
//    }
//
//    private Date LayNgayThangTu() {
//        int tuthang = txtTuThang.getSelectedIndex() + 1;
//        int tunam = txtTuNam.getYear();
//        String tungay = tunam + "-" + tuthang + "-01";
//
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        Date date = null;
//        try {
//            date = formatter.parse(String.valueOf(tungay));
//        } catch (Exception e) {
//        }
//        return date;
//    }
//
//    private Date LayNgayThangDen() {
//        int tuthang = txtDenThang.getSelectedIndex() + 1;
//        int tunam = txtDenNam.getYear();
//        String tungay = tunam + "-" + tuthang + "-01";
//
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        Date date = null;
//        try {
//            date = formatter.parse(String.valueOf(tungay));
//        } catch (Exception e) {
//        }
//        return date;
//    }
//
//    private void LocKetQua(String tungay, String denngay, byte trangthai, String sv) {
//        listhdsv = new ThongTinHoaDonDAO().searchHoaDonSV(tungay, denngay, trangthai, sv);
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//        Model.setRowCount(0);
//        for (ThongTinHoaDonSV hd : listhdsv) {
//            Date date = null;
//            try {
//                date = formatter.parse(String.valueOf(hd.getNgayThang()));
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//            String trangthai1;
//            String ngayThang = formatter1.format(date);
//            if (hd.getTrangThai() == 1) {
//                trangthai1 = "Đã thanh toán";
//            } else {
//                trangthai1 = "Chưa thanh toán";
//            }
//
//            Model.addRow(new Object[]{
//                ngayThang, hd.getMaSV(), hd.getTienThanhToan(), trangthai1
//            });
//        }
//    }
//
//    private void LocKetQuaAll(String tungay, String denngay, byte trangthai) {
//        listhdsv = new ThongTinHoaDonDAO().searchHoaDonSVAll(tungay, denngay, trangthai);
//        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
//        Model.setRowCount(0);
//        for (ThongTinHoaDonSV hd : listhdsv) {
//            Date date = null;
//            try {
//                date = formatter.parse(String.valueOf(hd.getNgayThang()));
//            } catch (ParseException e) {
//                e.printStackTrace();
//            }
//            String trangthai1;
//            String ngayThang = formatter1.format(date);
//            if (hd.getTrangThai() == 1) {
//                trangthai1 = "Đã thanh toán";
//            } else {
//                trangthai1 = "Chưa thanh toán";
//            }
//
//            Model.addRow(new Object[]{
//                ngayThang, hd.getMaSV(), hd.getTienThanhToan(), trangthai1
//            });
//        }
//    }
//
//    public void AddComboboxSinhVien() {
//
//        txtMaSV.removeAllItems();
//        txtMaSV.addItem("Tất cả");
//        List<ThongTinSinhVien> listsv = new SinhVienDAO().getAllThongTinSV();
//
//        for (ThongTinSinhVien sv : listsv) {
//            txtMaSV.addItem(sv.getMaSV());
//        }
//    }
}
